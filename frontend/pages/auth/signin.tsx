import type { NextPage } from 'next'
import Head from 'next/head'
import Link from "next/link";
import Router from 'next/router'

import { FormControl, Input, Button, Flex, Heading, FormErrorMessage, Text } from '@chakra-ui/react'
import { useForm } from 'react-hook-form'
import { yupResolver } from '@hookform/resolvers/yup'
import SignInSchema from '../../validations/signin'

import { setUser } from '../../store/slices/user'
import { useAppDispatch } from '../../store/hooks'

import styles from '../../styles/pages/auth.module.scss'
import axios from "axios"

const SignIn: NextPage = () => {
  const { register, handleSubmit, setError, formState: { errors } } = useForm({
    resolver: yupResolver(SignInSchema)
  });
  const dispatch = useAppDispatch();

  async function submit(values: any) {
    axios.post("/api/auth/signin", values)
      .then(response => {
        dispatch(setUser(response.data.user_data));
        Router.push("/");
      })
      .catch(error => {
        console.log(error.response.data);
        const { field, details } = error.response.data;
        setError(field, { type: 'manual', message: details });
      });
  }

  return (
    <Flex h="100vh" align="center" justify="center">
      <Head>
        <title>Sign In</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Flex className={styles.form} bg='gray.800'>
        <Heading color='gray.300' m={7}>Sign In</Heading>
        
        <FormControl
          isInvalid={!!errors?.email?.message}
        >
          <Input mt={2} variant='outline' type="email" placeholder="Enter your email..." {...register("email")} />
          <FormErrorMessage mb={2}>{errors?.email?.message}</FormErrorMessage>
        </FormControl>
        
        <FormControl
          isInvalid={!!errors?.password?.message}
        >  
          <Input mt={4} variant='outline' type="password" placeholder="Enter your password..." {...register("password")} />
          <FormErrorMessage>{errors?.password?.message}</FormErrorMessage>
        </FormControl>
        
        <Button variant='primary' mt={7} w='100%' onClick={handleSubmit(submit)}>Sign In âžœ</Button>

        <Link href="./signup">
          <Text my={4} color="gray.500" cursor="pointer">
            Sign up
          </Text>
        </Link>
      </Flex>
    </Flex>
  )
}

export default SignIn